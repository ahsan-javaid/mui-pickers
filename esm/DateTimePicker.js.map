{"version":3,"file":"DateTimePicker.js","sources":["../../src/_shared/icons/TimeIcon.tsx","../../src/_shared/icons/DateRangeIcon.tsx","../../src/DateTimePicker/DateTimePickerTabs.tsx","../../src/DateTimePicker/DateTimePickerToolbar.tsx","../../src/DateTimePicker/DateTimePicker.tsx"],"sourcesContent":["import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\n\nexport const TimeIcon: React.SFC<SvgIconProps> = props => {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n      <path d=\"M12.5 7H11v6l5.25 3.15.75-1.23-4.5-2.67z\" />\n    </SvgIcon>\n  );\n};\n","import React from 'react';\nimport SvgIcon, { SvgIconProps } from '@material-ui/core/SvgIcon';\n\nexport const DateRangeIcon: React.SFC<SvgIconProps> = props => {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M9 11H7v2h2v-2zm4 0h-2v2h2v-2zm4 0h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11 0-1.99.9-1.99 2L3 20c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 16H5V9h14v11z\" />\n      <path fill=\"none\" d=\"M0 0h24v24H0z\" />\n    </SvgIcon>\n  );\n};\n","import * as React from 'react';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Paper from '@material-ui/core/Paper';\nimport { TimeIcon } from '../_shared/icons/TimeIcon';\nimport { DateTimePickerView } from './DateTimePicker';\nimport { DateRangeIcon } from '../_shared/icons/DateRangeIcon';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst viewToTabIndex = (openView: DateTimePickerView) => {\n  if (openView === 'date' || openView === 'year') {\n    return 'date';\n  }\n\n  return 'time';\n};\n\nconst tabIndexToView = (tab: DateTimePickerView) => {\n  if (tab === 'date') {\n    return 'date';\n  }\n\n  return 'hours';\n};\n\nexport interface DateTimePickerTabsProps {\n  view: DateTimePickerView;\n  onChange: (view: DateTimePickerView) => void;\n  dateRangeIcon?: React.ReactNode;\n  timeIcon?: React.ReactNode;\n}\n\nexport const useStyles = makeStyles(\n  theme => {\n    // prettier-ignore\n    const tabsBackground = theme.palette.type === 'light'\n    ? theme.palette.primary.main\n    : theme.palette.background.default;\n\n    return {\n      tabs: {\n        color: theme.palette.getContrastText(tabsBackground),\n        backgroundColor: tabsBackground,\n      },\n    };\n  },\n  { name: 'MuiPickerDTTabs' }\n);\n\nexport const DateTimePickerTabs: React.SFC<DateTimePickerTabsProps> = ({\n  view,\n  onChange,\n  dateRangeIcon,\n  timeIcon,\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const indicatorColor = theme.palette.type === 'light' ? 'secondary' : 'primary';\n  const handleChange = (e: React.ChangeEvent<{}>, value: DateTimePickerView) => {\n    if (value !== viewToTabIndex(view)) {\n      onChange(tabIndexToView(value));\n    }\n  };\n\n  return (\n    <Paper>\n      <Tabs\n        variant=\"fullWidth\"\n        value={viewToTabIndex(view)}\n        onChange={handleChange}\n        className={classes.tabs}\n        indicatorColor={indicatorColor}\n      >\n        <Tab value=\"date\" icon={<>{dateRangeIcon}</>} />\n        <Tab value=\"time\" icon={<>{timeIcon}</>} />\n      </Tabs>\n    </Paper>\n  );\n};\n\nDateTimePickerTabs.defaultProps = {\n  dateRangeIcon: <DateRangeIcon />,\n  timeIcon: <TimeIcon />,\n};\n\nexport default DateTimePickerTabs;\n","import * as React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport PickerToolbar from '../_shared/PickerToolbar';\nimport ToolbarButton from '../_shared/ToolbarButton';\nimport DateTimePickerTabs from './DateTimePickerTabs';\nimport { useUtils } from '../_shared/hooks/useUtils';\nimport { DateTimePickerView } from './DateTimePicker';\nimport { ToolbarComponentProps } from '../Picker/Picker';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles(\n  _ => ({\n    toolbar: {\n      paddingLeft: 16,\n      paddingRight: 16,\n      justifyContent: 'space-around',\n    },\n    separator: {\n      margin: '0 4px 0 2px',\n      cursor: 'default',\n    },\n  }),\n  { name: 'MuiPickerDTToolbar' }\n);\n\nexport const DateTimePickerToolbar: React.FC<ToolbarComponentProps> = ({\n  date,\n  openView,\n  setOpenView,\n  ampm,\n  hideTabs,\n  dateRangeIcon,\n  timeIcon,\n  onChange,\n}) => {\n  const utils = useUtils();\n  const classes = useStyles();\n  const showTabs = !hideTabs && typeof window !== 'undefined' && window.innerHeight > 667;\n\n  return (\n    <>\n      <PickerToolbar isLandscape={false} className={classes.toolbar}>\n        <Grid container justify=\"center\" wrap=\"nowrap\">\n          <Grid item container xs={5} justify=\"flex-start\" direction=\"column\">\n            <div>\n              <ToolbarButton\n                variant=\"subtitle1\"\n                onClick={() => setOpenView('year')}\n                selected={openView === 'year'}\n                label={utils.getYearText(date)}\n              />\n            </div>\n            <div>\n              <ToolbarButton\n                variant=\"h4\"\n                onClick={() => setOpenView('date')}\n                selected={openView === 'date'}\n                label={utils.getDateTimePickerHeaderText(date)}\n              />\n            </div>\n          </Grid>\n        </Grid>\n      </PickerToolbar>\n\n      {showTabs && (\n        <DateTimePickerTabs\n          dateRangeIcon={dateRangeIcon}\n          timeIcon={timeIcon}\n          view={openView as DateTimePickerView}\n          onChange={setOpenView}\n        />\n      )}\n    </>\n  );\n};\n","import { useUtils } from '../_shared/hooks/useUtils';\nimport { PureDateInput } from '../_shared/PureDateInput';\nimport { BaseTimePickerProps } from '../TimePicker/TimePicker';\nimport { BaseDatePickerProps } from '../DatePicker/DatePicker';\nimport { DateTimePickerToolbar } from './DateTimePickerToolbar';\nimport { KeyboardDateInput } from '../_shared/KeyboardDateInput';\nimport { usePickerState } from '../_shared/hooks/usePickerState';\nimport { pick12hOr24hFormat } from '../_helpers/text-field-helper';\nimport { dateTimePickerDefaultProps } from '../constants/prop-types';\nimport { useKeyboardPickerState } from '../_shared/hooks/useKeyboardPickerState';\nimport {\n  WithKeyboardInputProps,\n  makePickerWithState,\n  WithPureInputProps,\n} from '../Picker/makePickerWithState';\n\nexport type DateTimePickerView = 'year' | 'date' | 'month' | 'hours' | 'minutes';\n\nexport type BaseDateTimePickerProps = BaseTimePickerProps & BaseDatePickerProps;\n\nexport interface DateTimePickerViewsProps extends BaseDateTimePickerProps {\n  /** Array of views to show */\n  views?: ('year' | 'date' | 'month' | 'hours' | 'minutes')[];\n  /** First view to show in DatePicker */\n  openTo?: 'year' | 'date' | 'month' | 'hours' | 'minutes';\n  /** To show tabs */\n  hideTabs?: boolean;\n  /** Date tab icon */\n  dateRangeIcon?: React.ReactNode;\n  /** Time tab icon */\n  timeIcon?: React.ReactNode;\n}\n\nexport type DateTimePickerProps = WithPureInputProps & DateTimePickerViewsProps;\n\nexport type KeyboardDateTimePickerProps = WithKeyboardInputProps & DateTimePickerViewsProps;\n\nconst defaultProps = {\n  ...dateTimePickerDefaultProps,\n  wider: true,\n  orientation: 'portrait' as const,\n  openTo: 'date' as DateTimePickerView,\n  views: ['year', 'date', 'hours', 'minutes'] as DateTimePickerView[],\n};\n\nfunction useOptions(props: DateTimePickerProps | KeyboardDateTimePickerProps) {\n  const utils = useUtils();\n\n  if (props.orientation !== 'portrait') {\n    throw new Error('We are not supporting custom orientation for DateTimePicker yet :(');\n  }\n\n  return {\n    getDefaultFormat: () =>\n      pick12hOr24hFormat(props.format, props.ampm, {\n        '12h': utils.dateTime12hFormat,\n        '24h': utils.dateTime24hFormat,\n      }),\n  };\n}\n\nexport const DateTimePicker = makePickerWithState<DateTimePickerProps>({\n  useOptions,\n  Input: PureDateInput,\n  useState: usePickerState,\n  DefaultToolbarComponent: DateTimePickerToolbar,\n});\n\nexport const KeyboardDateTimePicker = makePickerWithState<KeyboardDateTimePickerProps>({\n  useOptions,\n  Input: KeyboardDateInput,\n  useState: useKeyboardPickerState,\n  DefaultToolbarComponent: DateTimePickerToolbar,\n  getCustomProps: props => ({\n    refuse: props.ampm ? /[^\\dap]+/gi : /[^\\d]+/gi,\n  }),\n});\n\nDateTimePicker.defaultProps = defaultProps;\n\nKeyboardDateTimePicker.defaultProps = defaultProps;\n"],"names":["TimeIcon","props","React","DateRangeIcon","viewToTabIndex","openView","tabIndexToView","tab","useStyles","makeStyles","theme","tabsBackground","palette","type","primary","main","background","tabs","color","getContrastText","backgroundColor","name","DateTimePickerTabs","view","onChange","dateRangeIcon","timeIcon","classes","useTheme","indicatorColor","handleChange","e","value","React.createElement","defaultProps","_","toolbar","paddingLeft","paddingRight","justifyContent","separator","margin","cursor","DateTimePickerToolbar","date","setOpenView","ampm","hideTabs","utils","useUtils","showTabs","window","innerHeight","getYearText","getDateTimePickerHeaderText","dateTimePickerDefaultProps","wider","orientation","openTo","views","useOptions","Error","getDefaultFormat","pick12hOr24hFormat","format","dateTime12hFormat","dateTime24hFormat","DateTimePicker","makePickerWithState","Input","PureDateInput","useState","usePickerState","DefaultToolbarComponent","KeyboardDateTimePicker","KeyboardDateInput","useKeyboardPickerState","getCustomProps","refuse"],"mappings":"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"}